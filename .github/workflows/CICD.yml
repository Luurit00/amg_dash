name: CI/CD 

on: 
  push:
    branches:
      - main

jobs: 
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code 
        uses: actions/checkout@v2
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: setup ssh configuration
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan "${{secrets.HOSTNAME}}" >> ~/.ssh/known_hosts

      - name: clone app to ec2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            mkdir -p ~/amg_dash
            git clone https://github.com/Luurit00/amg_dash.git
      
      - name: get the stock data
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd ~/amg_dash
            mkdir ./data
            cd ./data
            wget https://raw.githubusercontent.com/plotly/datasets/master/stockdata2.csv
      
      - name: install docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd ~
            sudo snap refresh
            sudo snap install docker
            sudo service docker start
            sudo docker info

      - name: test the application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd ~/amg_dash
            pip3 install -r requirements.txt
            python3 -m pytest tests/test.py


      - name: build the application with docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd ~/amg_dash
            sudo docker build -t amg_dash:latest .

      - name: run the application and expose port 8080
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            sudo docker run -d -p 8080:5050 amg_dash

            
      - name: cleanup all running containers and images
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            sudo docker kill $(sudo docker ps -a -q)
            sudo docker rmi -f $(sudo docker images -a -q)











