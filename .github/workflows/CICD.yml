name: CI/CD 

on: 
  push:
    branches:
      - main

jobs: 
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up the python version ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: install requirements
        run: |
          pip install -r requirements.txt
      - name: test the code
        run: |
          python -m pytest tests/test.py 

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: setup ssh configuration
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan "${{secrets.HOSTNAME}}" >> ~/.ssh/known_hosts

      - name: clone app to ec2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            git clone https://github.com/Luurit00/amg_dash.git
      
      - name: get the stock data
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd ~/amg_dash
            mkdir ./data
            cd ./data
            wget https://raw.githubusercontent.com/plotly/datasets/master/stockdata2.csv
      
      - name: install docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd ~
            if command -v docker &>/dev/null; then
              echo "Docker is already installed"
            else
              sudo snap refresh
              sudo snap install docker
              sudo service docker start
              sudo docker info
            fi

      - name: build the application with docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd ~/amg_dash
            sudo docker build -t amg_dash:latest .

      - name: run the application and expose port 8080
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            sudo docker run -d -p 8080:5050 amg_dash:latest
            sleep 200
            
      - name: cleanup all directories, running containers and images
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd ~
            sudo docker kill $(sudo docker ps -a -q)
            sudo docker rmi -f amg_dash:latest
            rm -rf ~/amg_dash











